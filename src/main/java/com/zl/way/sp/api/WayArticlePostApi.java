/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen Do not edit the class manually.
 */
package com.zl.way.sp.api;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.zl.way.sp.api.model.*;

@RequestMapping(value = "")
public interface WayArticlePostApi {
    @RequestMapping(value = "/sp/article", produces = {"application/json"}, consumes = {"application/json"},
        method = RequestMethod.POST)
    ResponseEntity<ApiResponseMessage> createArticle(@Valid @RequestBody WayCreateArticlePostReq body,
        @RequestHeader(value = "X-userLoginId", required = true) Long xUserLoginId);

    @RequestMapping(value = "/sp/article/{postId}", method = RequestMethod.DELETE)
    ResponseEntity<ApiResponseMessage> deleteArticle(@PathVariable("postId") Long postId,
        @RequestHeader(value = "X-userLoginId", required = true) Long xUserLoginId);

    @RequestMapping(value = "/sp/article/{postId}", produces = {"application/json"}, method = RequestMethod.GET)
    ResponseEntity<WayQueryArticlePost> getArticle(@PathVariable("postId") Long postId,
        @RequestHeader(value = "X-userLoginId", required = true) Long xUserLoginId);

    @RequestMapping(value = "/sp/article/token", produces = {"application/json"}, method = RequestMethod.GET)
    ResponseEntity<WayArticlePostToken>
        getToken(@RequestHeader(value = "X-userLoginId", required = true) Long xUserLoginId);

    @RequestMapping(value = "/sp/article", produces = {"application/json"}, method = RequestMethod.GET)
    ResponseEntity<List<WayQueryArticlePost>> queryArticles(
        @NotNull @Valid @RequestParam(value = "page", required = true, defaultValue = "1") Integer page,
        @NotNull @Valid @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
        @Valid @RequestParam(value = "keywords", required = false) String keywords);

    @RequestMapping(value = "/sp/article/{postId}", produces = {"application/json"}, consumes = {"application/json"},
        method = RequestMethod.PUT)
    ResponseEntity<ApiResponseMessage> updateArticle(@Valid @RequestBody WayUpdateArticlePostReq body,
        @PathVariable("postId") Long postId,
        @RequestHeader(value = "X-userLoginId", required = true) Long xUserLoginId);

}
