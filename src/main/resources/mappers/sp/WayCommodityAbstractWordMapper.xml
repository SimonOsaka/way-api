<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.way.sp.mapper.WayCommodityAbstractWordMapper">
    <resultMap id="BaseResultMap" type="com.zl.way.sp.model.WayCommodityAbstractWord">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="shop_cate_leaf_id" jdbcType="INTEGER" property="shopCateLeafId"/>
        <result column="json_data" jdbcType="CHAR" property="jsonData"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="leaf" jdbcType="TINYINT" property="leaf"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, shop_cate_leaf_id, json_data, create_time, update_time, is_deleted, leaf,
        pid
    </sql>
    <sql id="Less_Column_List">
        id, name, shop_cate_leaf_id, json_data, leaf, pid
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from way_commodity_abstract_word
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from way_commodity_abstract_word
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zl.way.sp.model.WayCommodityAbstractWord"
            useGeneratedKeys="true">
        insert into way_commodity_abstract_word (name, shop_cate_leaf_id, json_data,
        create_time, update_time, is_deleted,
        leaf)
        values (#{name,jdbcType=VARCHAR}, #{shopCateLeafId,jdbcType=INTEGER}, #{jsonData,jdbcType=CHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=TINYINT},
        #{leaf,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.zl.way.sp.model.WayCommodityAbstractWord" useGeneratedKeys="true">
        insert into way_commodity_abstract_word
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="shopCateLeafId != null">
                shop_cate_leaf_id,
            </if>
            <if test="jsonData != null">
                json_data,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="leaf != null">
                leaf,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="shopCateLeafId != null">
                #{shopCateLeafId,jdbcType=INTEGER},
            </if>
            <if test="jsonData != null">
                #{jsonData,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="leaf != null">
                #{leaf,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zl.way.sp.model.WayCommodityAbstractWord">
        update way_commodity_abstract_word
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="shopCateLeafId != null">
                shop_cate_leaf_id = #{shopCateLeafId,jdbcType=INTEGER},
            </if>
            <if test="jsonData != null">
                json_data = #{jsonData,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="leaf != null">
                leaf = #{leaf,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zl.way.sp.model.WayCommodityAbstractWord">
        update way_commodity_abstract_word
        set name = #{name,jdbcType=VARCHAR},
        shop_cate_leaf_id = #{shopCateLeafId,jdbcType=INTEGER},
        json_data = #{jsonData,jdbcType=CHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        is_deleted = #{isDeleted,jdbcType=TINYINT},
        leaf = #{leaf,jdbcType=TINYINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateLeafByPrimaryKey" parameterType="com.zl.way.sp.model.WayCommodityAbstractWord">
        UPDATE way_commodity_abstract_word
        SET json_data = JSON_SET(json_data, '$.leaf', #{leaf,jdbcType=TINYINT}),
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByCondition" resultMap="BaseResultMap">
        select
        <include refid="Less_Column_List"/>
        from
        way_commodity_abstract_word word
        where word.is_deleted = 0
        <if test="condition.name != null and condition.name != ''">
            and word.name = #{condition.name, jdbcType=VARCHAR},
        </if>
        <if test="condition.shopCateLeafId != null">
            and word.shop_cate_leaf_id = #{condition.shopCateLeafId, jdbcType=INTEGER}
        </if>
        <if test="condition.leaf != null">
            and word.leaf = #{condition.leaf, jdbcType=TINYINT}
        </if>
        <if test="condition.pid != null">
            and word.pid = #{condition.pid, jdbcType=TINYINT}
        </if>
        <if test="condition.pathPid != null">
            and JSON_CONTAINS(word.json_data->'$.path[*]', CONVERT(#{condition.pathPid, jdbcType=INTEGER}, CHAR))
        </if>
        <if test="condition.ids != null and condition.ids.size > 0">
            <foreach collection="condition.ids" item="item" separator="," open="and word.id in (" close=")">
                #{item, jdbcType=INTEGER}
            </foreach>
        </if>
        <if test="pageable != null and pageable.offset != null and pageable.pageSize != null">
            limit ${pageable.offset}, ${pageable.pageSize}
        </if>
    </select>
</mapper>
